---
import { useStoryblokApi } from '@storyblok/astro'
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'
import BaseLayout from '../layouts/BaseLayout.astro'
 

const storyblokApi = useStoryblokApi()

const { data } = await storyblokApi.get('cdn/stories/thank-you', {
  version: 'draft',
})
 
const story = data.story
---
 
<BaseLayout>
  <StoryblokComponent blok={story.content} />
</BaseLayout>

<script>

  interface Defaults {
    startVelocity: number,
    spread: number,
    ticks: number
    zIndex: number
  }

  const duration: number = 15 * 1000;
  const animationEnd: number = Date.now() + duration;
  const defaults: Defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };

  function randomInRange(min: number, max: number): number {
    return Math.random() * (max - min) + min;
  }


  function createConfetti() {
    const timeLeft = animationEnd - Date.now();

    if (timeLeft <= 0) {
      return clearInterval(interval);
    }

    const particleCount = 50 * (timeLeft / duration);
    // since particles fall down, start a bit higher than random
    confetti({ ...defaults, particleCount, origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 } });
    confetti({ ...defaults, particleCount, origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 } });
  }

  const interval = setInterval(createConfetti, 250);
</script>
